diff -ruN anaconda-19.31.123.orig/pyanaconda/ui/gui/spokes/advanced_user.glade anaconda-19.31.123/pyanaconda/ui/gui/spokes/advanced_user.glade
--- anaconda-19.31.123.orig/pyanaconda/ui/gui/spokes/advanced_user.glade	2015-02-16 09:29:34.000000000 -0700
+++ anaconda-19.31.123/pyanaconda/ui/gui/spokes/advanced_user.glade	1969-12-31 17:00:00.000000000 -0700
@@ -1,438 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<interface>
-  <!-- interface-requires gtk+ 3.0 -->
-  <object class="GtkDialog" id="advancedUserDialog">
-    <property name="can_focus">False</property>
-    <property name="border_width">5</property>
-    <property name="type_hint">dialog</property>
-    <property name="decorated">False</property>
-    <child internal-child="vbox">
-      <object class="GtkBox" id="dialog-vbox1">
-        <property name="can_focus">False</property>
-        <property name="orientation">vertical</property>
-        <property name="spacing">2</property>
-        <child internal-child="action_area">
-          <object class="GtkButtonBox" id="dialog-action_area1">
-            <property name="can_focus">False</property>
-            <property name="layout_style">end</property>
-            <child>
-              <object class="GtkButton" id="button2">
-                <property name="label">gtk-cancel</property>
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="receives_default">True</property>
-                <property name="use_stock">True</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">0</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkButton" id="button1">
-                <property name="label" translatable="yes">_Save Changes</property>
-                <property name="use_underline">True</property>
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="receives_default">True</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="pack_type">end</property>
-            <property name="position">0</property>
-          </packing>
-        </child>
-        <child>
-          <object class="GtkBox" id="box1">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="margin_right">16</property>
-            <property name="orientation">vertical</property>
-            <child>
-              <object class="GtkLabel" id="label1">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="xalign">0</property>
-                <property name="label" translatable="yes">ADVANCED USER CONFIGURATION</property>
-                <attributes>
-                  <attribute name="weight" value="bold"/>
-                  <attribute name="scale" value="100"/>
-                  <attribute name="size" value="125"/>
-                </attributes>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">0</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkLabel" id="label2">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="margin_top">8</property>
-                <property name="xalign">0</property>
-                <property name="label" translatable="yes">Home Directory</property>
-                <attributes>
-                  <attribute name="weight" value="bold"/>
-                </attributes>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkBox" id="box2">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="margin_left">16</property>
-                <property name="orientation">vertical</property>
-                <child>
-                  <object class="GtkCheckButton" id="c_home">
-                    <property name="label" translatable="yes">Create a _home directory for this user.</property>
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="receives_default">False</property>
-                    <property name="margin_top">4</property>
-                    <property name="use_underline">True</property>
-                    <property name="xalign">0</property>
-                    <property name="draw_indicator">True</property>
-                    <signal name="toggled" handler="_apply_checkboxes" swapped="no"/>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">0</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkBox" id="box3">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="margin_left">42</property>
-                    <property name="margin_top">3</property>
-                    <child>
-                      <object class="GtkLabel" id="l_home">
-                        <property name="visible">True</property>
-                        <property name="sensitive">False</property>
-                        <property name="can_focus">False</property>
-                        <property name="label" translatable="yes">Home _directory:</property>
-                        <property name="use_underline">True</property>
-                        <property name="mnemonic_widget">t_home</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">0</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkEntry" id="t_home">
-                        <property name="visible">True</property>
-                        <property name="sensitive">False</property>
-                        <property name="can_focus">True</property>
-                        <property name="margin_left">13</property>
-                        <property name="invisible_char">‚óè</property>
-                      </object>
-                      <packing>
-                        <property name="expand">True</property>
-                        <property name="fill">True</property>
-                        <property name="position">1</property>
-                      </packing>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="expand">True</property>
-                    <property name="fill">True</property>
-                    <property name="position">1</property>
-                  </packing>
-                </child>
-              </object>
-              <packing>
-                <property name="expand">True</property>
-                <property name="fill">True</property>
-                <property name="position">2</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkLabel" id="label4">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="margin_top">8</property>
-                <property name="xalign">0</property>
-                <property name="label" translatable="yes">User and Group IDs</property>
-                <attributes>
-                  <attribute name="weight" value="bold"/>
-                </attributes>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">3</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkGrid" id="grid1">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="margin_left">16</property>
-                <property name="margin_top">3</property>
-                <child>
-                  <object class="GtkCheckButton" id="c_uid">
-                    <property name="label" translatable="yes">Specify a _user ID manually:</property>
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="receives_default">False</property>
-                    <property name="use_underline">True</property>
-                    <property name="xalign">0</property>
-                    <property name="draw_indicator">True</property>
-                    <signal name="toggled" handler="_apply_checkboxes" swapped="no"/>
-                  </object>
-                  <packing>
-                    <property name="left_attach">0</property>
-                    <property name="top_attach">0</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkCheckButton" id="c_gid">
-                    <property name="label" translatable="yes">Specify a _group ID manually:</property>
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="receives_default">False</property>
-                    <property name="use_underline">True</property>
-                    <property name="xalign">0</property>
-                    <property name="draw_indicator">True</property>
-                    <signal name="toggled" handler="_apply_checkboxes" swapped="no"/>
-                  </object>
-                  <packing>
-                    <property name="left_attach">0</property>
-                    <property name="top_attach">1</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkSpinButton" id="spin_uid">
-                    <property name="visible">True</property>
-                    <property name="sensitive">False</property>
-                    <property name="can_focus">True</property>
-                    <property name="margin_left">8</property>
-                    <property name="invisible_char">‚óè</property>
-                    <property name="width_chars">5</property>
-                    <property name="progress_pulse_step">0.0099999997764825821</property>
-                    <property name="adjustment">uid</property>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="top_attach">0</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkSpinButton" id="spin_gid">
-                    <property name="visible">True</property>
-                    <property name="sensitive">False</property>
-                    <property name="can_focus">True</property>
-                    <property name="margin_left">8</property>
-                    <property name="invisible_char">‚óè</property>
-                    <property name="width_chars">5</property>
-                    <property name="adjustment">gid</property>
-                  </object>
-                  <packing>
-                    <property name="left_attach">1</property>
-                    <property name="top_attach">1</property>
-                    <property name="width">1</property>
-                    <property name="height">1</property>
-                  </packing>
-                </child>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">4</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkLabel" id="label5">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="margin_top">8</property>
-                <property name="xalign">0</property>
-                <property name="label" translatable="yes">Group Membership</property>
-                <attributes>
-                  <attribute name="weight" value="bold"/>
-                </attributes>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">5</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkBox" id="box4">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="margin_left">16</property>
-                <property name="margin_top">3</property>
-                <property name="orientation">vertical</property>
-                <child>
-                  <object class="GtkLabel" id="label6">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="xalign">0</property>
-                    <property name="label" translatable="yes">_Add user to the following groups:</property>
-                    <property name="use_underline">True</property>
-                    <property name="mnemonic_widget">t_groups</property>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">0</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkEntry" id="t_groups">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="margin_top">3</property>
-                    <property name="invisible_char">‚óè</property>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">1</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkGrid" id="grid2">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="margin_top">3</property>
-                    <child>
-                      <object class="GtkLabel" id="label7">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="margin_left">5</property>
-                        <property name="xalign">0</property>
-                        <property name="label" translatable="yes">wheel, my-team (1245), project-x (29935)</property>
-                      </object>
-                      <packing>
-                        <property name="left_attach">1</property>
-                        <property name="top_attach">0</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkLabel" id="label8">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="margin_left">5</property>
-                        <property name="margin_top">3</property>
-                        <property name="xalign">0</property>
-                        <property name="yalign">0</property>
-                        <property name="label" translatable="yes">You may input a comma-separated list of group names and group IDs here.
-Groups that do not already exist will be created; specify their GID in parentheses. </property>
-                        <property name="wrap">True</property>
-                      </object>
-                      <packing>
-                        <property name="left_attach">1</property>
-                        <property name="top_attach">1</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkLabel" id="label9">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="xalign">1</property>
-                        <property name="label" translatable="yes">Example:</property>
-                        <attributes>
-                          <attribute name="weight" value="bold"/>
-                        </attributes>
-                      </object>
-                      <packing>
-                        <property name="left_attach">0</property>
-                        <property name="top_attach">0</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkLabel" id="label10">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="margin_top">3</property>
-                        <property name="xalign">1</property>
-                        <property name="yalign">0</property>
-                        <property name="label" translatable="yes">Tip:</property>
-                        <attributes>
-                          <attribute name="weight" value="bold"/>
-                        </attributes>
-                      </object>
-                      <packing>
-                        <property name="left_attach">0</property>
-                        <property name="top_attach">1</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">2</property>
-                  </packing>
-                </child>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">6</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="position">1</property>
-          </packing>
-        </child>
-      </object>
-    </child>
-    <action-widgets>
-      <action-widget response="2">button2</action-widget>
-      <action-widget response="1">button1</action-widget>
-    </action-widgets>
-  </object>
-  <object class="GtkAdjustment" id="gid">
-    <property name="lower">1000</property>
-    <property name="upper">4294967295</property>
-    <property name="value">1000</property>
-    <property name="step_increment">1</property>
-    <property name="page_increment">10</property>
-  </object>
-  <object class="GtkAdjustment" id="uid">
-    <property name="lower">1000</property>
-    <property name="upper">4294967295</property>
-    <property name="value">1000</property>
-    <property name="step_increment">1</property>
-    <property name="page_increment">10</property>
-  </object>
-</interface>
diff -ruN anaconda-19.31.123.orig/pyanaconda/ui/gui/spokes/advanced_user.glade.h anaconda-19.31.123/pyanaconda/ui/gui/spokes/advanced_user.glade.h
--- anaconda-19.31.123.orig/pyanaconda/ui/gui/spokes/advanced_user.glade.h	2015-02-16 09:32:06.000000000 -0700
+++ anaconda-19.31.123/pyanaconda/ui/gui/spokes/advanced_user.glade.h	1969-12-31 17:00:00.000000000 -0700
@@ -1,15 +0,0 @@
-char *s = N_("_Save Changes");
-char *s = N_("ADVANCED USER CONFIGURATION");
-char *s = N_("Home Directory");
-char *s = N_("Create a _home directory for this user.");
-char *s = N_("Home _directory:");
-char *s = N_("User and Group IDs");
-char *s = N_("Specify a _user ID manually:");
-char *s = N_("Specify a _group ID manually:");
-char *s = N_("Group Membership");
-char *s = N_("_Add user to the following groups:");
-char *s = N_("wheel, my-team (1245), project-x (29935)");
-char *s = N_("You may input a comma-separated list of group names and group IDs here.\n"
-             "Groups that do not already exist will be created; specify their GID in parentheses. ");
-char *s = N_("Example:");
-char *s = N_("Tip:");
diff -ruN anaconda-19.31.123.orig/pyanaconda/ui/gui/spokes/user.glade anaconda-19.31.123/pyanaconda/ui/gui/spokes/user.glade
--- anaconda-19.31.123.orig/pyanaconda/ui/gui/spokes/user.glade	2015-02-16 09:29:34.000000000 -0700
+++ anaconda-19.31.123/pyanaconda/ui/gui/spokes/user.glade	1969-12-31 17:00:00.000000000 -0700
@@ -1,361 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<interface>
-  <!-- interface-requires gtk+ 3.0 -->
-  <!-- interface-requires AnacondaWidgets 1.0 -->
-  <object class="AnacondaSpokeWindow" id="userCreationWindow">
-    <property name="startup_id">filler</property>
-    <property name="can_focus">False</property>
-    <property name="hexpand">True</property>
-    <property name="vexpand">True</property>
-    <property name="startup_id">filler</property>
-    <property name="window_name" translatable="yes">CREATE USER</property>
-    <signal name="button-clicked" handler="on_back_clicked" swapped="no"/>
-    <child internal-child="main_box">
-      <object class="GtkBox" id="AnacondaSpokeWindow-main_box1">
-        <property name="can_focus">False</property>
-        <property name="orientation">vertical</property>
-        <property name="spacing">6</property>
-        <child internal-child="nav_box">
-          <object class="GtkEventBox" id="AnacondaSpokeWindow-nav_box1">
-            <property name="can_focus">False</property>
-            <child internal-child="nav_area">
-              <object class="GtkGrid" id="AnacondaSpokeWindow-nav_area1">
-                <property name="can_focus">False</property>
-                <property name="margin_left">6</property>
-                <property name="margin_right">6</property>
-                <property name="margin_top">6</property>
-              </object>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">False</property>
-            <property name="position">0</property>
-          </packing>
-        </child>
-        <child internal-child="alignment">
-          <object class="GtkAlignment" id="AnacondaSpokeWindow-alignment1">
-            <property name="can_focus">False</property>
-            <property name="margin_top">12</property>
-            <property name="yalign">0</property>
-            <property name="xscale">0.75</property>
-            <property name="yscale">0.75</property>
-            <property name="bottom_padding">48</property>
-            <property name="left_padding">24</property>
-            <property name="right_padding">24</property>
-            <child internal-child="action_area">
-              <object class="GtkBox" id="AnacondaSpokeWindow-action_area1">
-                <property name="can_focus">False</property>
-                <property name="orientation">vertical</property>
-                <property name="spacing">6</property>
-                <child>
-                  <object class="GtkGrid" id="grid1">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="row_spacing">8</property>
-                    <property name="column_spacing">9</property>
-                    <child>
-                      <object class="GtkLabel" id="label1">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="xalign">1</property>
-                        <property name="xpad">10</property>
-                        <property name="label" translatable="yes">_Full name</property>
-                        <property name="use_underline">True</property>
-                        <property name="mnemonic_widget">t_fullname</property>
-                        <attributes>
-                          <attribute name="weight" value="bold"/>
-                        </attributes>
-                      </object>
-                      <packing>
-                        <property name="left_attach">0</property>
-                        <property name="top_attach">0</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkLabel" id="label2">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="xalign">1</property>
-                        <property name="xpad">10</property>
-                        <property name="label" translatable="yes">_User name</property>
-                        <property name="use_underline">True</property>
-                        <property name="mnemonic_widget">t_username</property>
-                        <attributes>
-                          <attribute name="weight" value="bold"/>
-                        </attributes>
-                      </object>
-                      <packing>
-                        <property name="left_attach">0</property>
-                        <property name="top_attach">1</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkEntry" id="t_fullname">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="invisible_char">‚óè</property>
-                        <property name="invisible_char_set">True</property>
-                        <property name="caps_lock_warning">False</property>
-                        <signal name="changed" handler="_guessNames" swapped="no"/>
-                      </object>
-                      <packing>
-                        <property name="left_attach">1</property>
-                        <property name="top_attach">0</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkEntry" id="t_username">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="invisible_char">‚óè</property>
-                        <property name="invisible_char_set">True</property>
-                        <signal name="changed" handler="_guessNameDisabler" swapped="no"/>
-                      </object>
-                      <packing>
-                        <property name="left_attach">1</property>
-                        <property name="top_attach">1</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkLabel" id="label3">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="xalign">1</property>
-                        <property name="xpad">10</property>
-                        <property name="label" translatable="yes">_Password</property>
-                        <property name="use_underline">True</property>
-                        <property name="mnemonic_widget">t_password</property>
-                        <attributes>
-                          <attribute name="weight" value="bold"/>
-                        </attributes>
-                      </object>
-                      <packing>
-                        <property name="left_attach">0</property>
-                        <property name="top_attach">5</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkLabel" id="label4">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="xalign">1</property>
-                        <property name="xpad">10</property>
-                        <property name="label" translatable="yes">_Confirm password</property>
-                        <property name="use_underline">True</property>
-                        <property name="mnemonic_widget">t_verifypassword</property>
-                        <attributes>
-                          <attribute name="weight" value="bold"/>
-                        </attributes>
-                      </object>
-                      <packing>
-                        <property name="left_attach">0</property>
-                        <property name="top_attach">7</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkEntry" id="t_password">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="visibility">False</property>
-                        <property name="invisible_char">‚óè</property>
-                        <signal name="changed" handler="_checkPassword" swapped="no"/>
-                      </object>
-                      <packing>
-                        <property name="left_attach">1</property>
-                        <property name="top_attach">5</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkEntry" id="t_verifypassword">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="visibility">False</property>
-                        <property name="invisible_char">‚óè</property>
-                        <signal name="changed" handler="_checkPassword" swapped="no"/>
-                      </object>
-                      <packing>
-                        <property name="left_attach">1</property>
-                        <property name="top_attach">7</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkLabel" id="label6">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="xalign">0</property>
-                        <property name="label" translatable="yes">&lt;b&gt;Tip:&lt;/b&gt; Keep your user name shorter than 32 characters and do not use spaces.</property>
-                        <property name="use_markup">True</property>
-                      </object>
-                      <packing>
-                        <property name="left_attach">1</property>
-                        <property name="top_attach">2</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkCheckButton" id="c_usepassword">
-                        <property name="label" translatable="yes">Require a password to use this account</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">False</property>
-                        <property name="xalign">0</property>
-                        <property name="active">True</property>
-                        <property name="draw_indicator">True</property>
-                        <signal name="toggled" handler="_passwordDisabler" swapped="no"/>
-                      </object>
-                      <packing>
-                        <property name="left_attach">1</property>
-                        <property name="top_attach">4</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkBox" id="box2">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <child>
-                          <object class="GtkLevelBar" id="password_bar">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                            <property name="orientation">vertical</property>
-                            <property name="mode">GTK_LEVEL_BAR_MODE_DISCRETE</property>
-                            <property name="min-value">0</property>
-                            <property name="max-value">4</property>
-                            <property name="orientation">GTK_ORIENTATION_HORIZONTAL</property>
-                            <property name="value">2</property>
-                            <property name="halign">fill</property>
-                            <property name="valign">center</property>
-                          </object>
-                          <packing>
-                            <property name="expand">True</property>
-                            <property name="fill">True</property>
-                            <property name="position">0</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkLabel" id="password_label">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                            <property name="valign">center</property>
-                            <property name="xpad">6</property>
-                            <property name="label" translatable="yes">empty password</property>
-                            <attributes>
-                              <attribute name="weight" value="bold"/>
-                            </attributes>
-                          </object>
-                          <packing>
-                            <property name="expand">False</property>
-                            <property name="fill">True</property>
-                            <property name="position">1</property>
-                          </packing>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="left_attach">1</property>
-                        <property name="top_attach">6</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkCheckButton" id="c_admin">
-                        <property name="label" translatable="yes">Make this user administrator</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">False</property>
-                        <property name="xalign">0</property>
-                        <property name="draw_indicator">True</property>
-                      </object>
-                      <packing>
-                        <property name="left_attach">1</property>
-                        <property name="top_attach">3</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkGrid" id="grid2">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <child>
-                          <object class="GtkButton" id="b_advanced">
-                            <property name="label" translatable="yes">_Advanced...</property>
-                            <property name="visible">True</property>
-                            <property name="sensitive">False</property>
-                            <property name="can_focus">True</property>
-                            <property name="receives_default">True</property>
-                            <property name="use_underline">True</property>
-                            <signal name="clicked" handler="on_advanced_clicked" swapped="no"/>
-                          </object>
-                          <packing>
-                            <property name="left_attach">0</property>
-                            <property name="top_attach">0</property>
-                            <property name="width">1</property>
-                            <property name="height">1</property>
-                          </packing>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="left_attach">1</property>
-                        <property name="top_attach">8</property>
-                        <property name="width">1</property>
-                        <property name="height">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <placeholder/>
-                    </child>
-                    <child>
-                      <placeholder/>
-                    </child>
-                    <child>
-                      <placeholder/>
-                    </child>
-                    <child>
-                      <placeholder/>
-                    </child>
-                    <child>
-                      <placeholder/>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="expand">True</property>
-                    <property name="fill">True</property>
-                    <property name="position">0</property>
-                  </packing>
-                </child>
-              </object>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">True</property>
-            <property name="fill">True</property>
-            <property name="position">1</property>
-          </packing>
-        </child>
-        <child>
-          <placeholder/>
-        </child>
-      </object>
-    </child>
-  </object>
-</interface>
diff -ruN anaconda-19.31.123.orig/pyanaconda/ui/gui/spokes/user.glade.h anaconda-19.31.123/pyanaconda/ui/gui/spokes/user.glade.h
--- anaconda-19.31.123.orig/pyanaconda/ui/gui/spokes/user.glade.h	2015-02-16 09:32:06.000000000 -0700
+++ anaconda-19.31.123/pyanaconda/ui/gui/spokes/user.glade.h	1969-12-31 17:00:00.000000000 -0700
@@ -1,10 +0,0 @@
-char *s = N_("CREATE USER");
-char *s = N_("_Full name");
-char *s = N_("_User name");
-char *s = N_("_Password");
-char *s = N_("_Confirm password");
-char *s = N_("<b>Tip:</b> Keep your user name shorter than 32 characters and do not use spaces.");
-char *s = N_("Require a password to use this account");
-char *s = N_("empty password");
-char *s = N_("Make this user administrator");
-char *s = N_("_Advanced...");
diff -ruN anaconda-19.31.123.orig/pyanaconda/ui/gui/spokes/user.py anaconda-19.31.123/pyanaconda/ui/gui/spokes/user.py
--- anaconda-19.31.123.orig/pyanaconda/ui/gui/spokes/user.py	2015-02-16 09:29:34.000000000 -0700
+++ anaconda-19.31.123/pyanaconda/ui/gui/spokes/user.py	1969-12-31 17:00:00.000000000 -0700
@@ -1,504 +0,0 @@
-# User creation spoke
-#
-# Copyright (C) 2013-2014 Red Hat, Inc.
-#
-# This copyrighted material is made available to anyone wishing to use,
-# modify, copy, or redistribute it subject to the terms and conditions of
-# the GNU General Public License v.2, or (at your option) any later version.
-# This program is distributed in the hope that it will be useful, but WITHOUT
-# ANY WARRANTY expressed or implied, including the implied warranties of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
-# Public License for more details.  You should have received a copy of the
-# GNU General Public License along with this program; if not, write to the
-# Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
-# 02110-1301, USA.  Any Red Hat trademarks that are incorporated in the
-# source code or documentation are not subject to the GNU General Public
-# License and may only be used or replicated with the express permission of
-# Red Hat, Inc.
-#
-# Red Hat Author(s): Martin Sivak <msivak@redhat.com>
-#                    Chris Lumens <clumens@redhat.com>
-#
-
-import os
-from pyanaconda.flags import flags
-from pyanaconda.i18n import _, N_
-from pyanaconda.users import cryptPassword, validatePassword, guess_username, USERNAME_VALID
-from pwquality import PWQError
-
-from pyanaconda.ui.gui.spokes import NormalSpoke
-from pyanaconda.ui.gui import GUIObject
-from pyanaconda.ui.gui.categories.user_settings import UserSettingsCategory
-from pyanaconda.ui.common import FirstbootSpokeMixIn
-from pyanaconda.ui.gui.utils import enlightbox
-from pyanaconda.iutil import parse_group_str
-
-from pykickstart.constants import FIRSTBOOT_RECONFIG
-from pyanaconda.constants import ANACONDA_ENVIRON, FIRSTBOOT_ENVIRON
-
-import pwquality
-
-__all__ = ["UserSpoke", "AdvancedUserDialog"]
-
-class AdvancedUserDialog(GUIObject):
-    builderObjects = ["advancedUserDialog", "uid", "gid"]
-    mainWidgetName = "advancedUserDialog"
-    uiFile = "spokes/advanced_user.glade"
-
-    def __init__(self, user, groupDict, data):
-        GUIObject.__init__(self, data)
-        self._user = user
-        self._groupDict = groupDict
-
-    def initialize(self):
-        GUIObject.initialize(self)
-
-    def _apply_checkboxes(self, _editable = None, data = None):
-        """Update the state of this screen according to the
-        checkbox states on the screen. It is called from
-        the toggled Gtk event.
-        """
-        c_home = self.builder.get_object("c_home").get_active()
-        c_uid = self.builder.get_object("c_uid").get_active()
-        c_gid = self.builder.get_object("c_gid").get_active()
-
-        self.builder.get_object("t_home").set_sensitive(c_home)
-        self.builder.get_object("l_home").set_sensitive(c_home)
-        self.builder.get_object("spin_uid").set_sensitive(c_uid)
-        self.builder.get_object("spin_gid").set_sensitive(c_gid)
-
-    def refresh(self):
-        t_home = self.builder.get_object("t_home")
-        if self._user.homedir:
-            t_home.set_text(self._user.homedir)
-        elif self._user.name:
-            homedir = "/home/" + self._user.name
-            t_home.set_text(homedir)
-            self._user.homedir = homedir
-
-        c_home = self.builder.get_object("c_home")
-        c_home.set_active(bool(self._user.homedir))
-        c_uid = self.builder.get_object("c_uid")
-        c_uid.set_active(bool(self._user.uid))
-        c_gid = self.builder.get_object("c_gid")
-        c_gid.set_active(bool(self._user.gid))
-        self._apply_checkboxes()
-
-        self.builder.get_object("spin_uid").update()
-        self.builder.get_object("spin_gid").update()
-
-        groups = []
-        for group_name in self._user.groups:
-            group = self._groupDict[group_name]
-
-            if group.name and group.gid is not None:
-                groups.append("%s (%d)" % (group.name, group.gid))
-            elif group.name:
-                groups.append(group.name)
-            elif group.gid is not None:
-                groups.append("(%d)" % (group.gid,))
-
-        self.builder.get_object("t_groups").set_text(", ".join(groups))
-
-    def run(self):
-        self.window.show()
-        rc = self.window.run()
-        self.window.hide()
-
-        #OK clicked
-        if rc == 1:
-            if self.builder.get_object("c_home").get_active():
-                self._user.homedir = self.builder.get_object("t_home").get_text()
-                if not os.path.isabs(self._user.homedir):
-                    self._user.homedir = "/" + self._user.homedir
-            else:
-                self._user.homedir = None
-
-            if self.builder.get_object("c_uid").get_active():
-                self._user.uid = int(self.builder.get_object("uid").get_value())
-            else:
-                self._user.uid = None
-
-            if self.builder.get_object("c_gid").get_active():
-                self._user.gid = int(self.builder.get_object("gid").get_value())
-            else:
-                self._user.gid = None
-
-            groups = self.builder.get_object("t_groups").get_text().split(",")
-            self._user.groups = []
-            for group in groups:
-                group = group.strip()
-                name, gid = parse_group_str(group)
-                if not name:
-                    continue
-                if name not in self._groupDict or self._groupDict[name].gid != gid:
-                    self._groupDict[name] = self.data.GroupData(name=name, gid=gid)
-                self._user.groups.append(name)
-
-        #Cancel clicked, window destroyed...
-        else:
-            pass
-
-        return rc
-
-
-
-class UserSpoke(FirstbootSpokeMixIn, NormalSpoke):
-    builderObjects = ["userCreationWindow"]
-
-    mainWidgetName = "userCreationWindow"
-    uiFile = "spokes/user.glade"
-    helpFile = "UserSpoke.xml"
-
-    category = UserSettingsCategory
-
-    icon = "avatar-default-symbolic"
-    title = N_("_USER CREATION")
-
-    @classmethod
-    def should_run(cls, environment, data):
-        # the user spoke should run always in the anaconda and in firstboot only
-        # when doing reconfig or if no user has been created in the installation
-        if environment == ANACONDA_ENVIRON:
-            return True
-        elif environment == FIRSTBOOT_ENVIRON and data is None:
-            # cannot decide, stay in the game and let another call with data
-            # available (will come) decide
-            return True
-        elif environment == FIRSTBOOT_ENVIRON and data and \
-                (data.firstboot.firstboot == FIRSTBOOT_RECONFIG or \
-                     len(data.user.userList) == 0):
-            return True
-        else:
-            return False
-
-    def __init__(self, *args):
-        NormalSpoke.__init__(self, *args)
-        self._oldweak = None
-        self._error = False
-
-    def initialize(self):
-        NormalSpoke.initialize(self)
-
-        if self.data.user.userList:
-            self._user = self.data.user.userList[0]
-        else:
-            self._user = self.data.UserData()
-        self._wheel = self.data.GroupData(name = "wheel")
-        self._groupDict = {"wheel": self._wheel}
-
-        # placeholders for the text boxes
-        self.fullname = self.builder.get_object("t_fullname")
-        self.username = self.builder.get_object("t_username")
-        self.pw = self.builder.get_object("t_password")
-        self.confirm = self.builder.get_object("t_verifypassword")
-        self.admin = self.builder.get_object("c_admin")
-        self.usepassword = self.builder.get_object("c_usepassword")
-        self.b_advanced = self.builder.get_object("b_advanced")
-
-        self.guesser = {
-            self.username: True
-            }
-
-        # set up passphrase quality checker
-        self._pwq = pwquality.PWQSettings()
-        self._pwq.read_config()
-
-        self.pw_bar = self.builder.get_object("password_bar")
-        self.pw_label = self.builder.get_object("password_label")
-
-        # indicate when the password was set by kickstart
-        self._user.password_kickstarted = self.data.user.seen
-        if self._user.password_kickstarted:
-            self.usepassword.set_active(self._user.password != "")
-            if not self._user.isCrypted:
-                self.pw.set_text(self._user.password)
-                self.confirm.set_text(self._user.password)
-            else:
-                self.usepassword.set_active(True)
-                self.pw.set_placeholder_text(_("The password was set by kickstart."))
-                self.confirm.set_placeholder_text(_("The password was set by kickstart."))
-
-        self._advanced = AdvancedUserDialog(self._user, self._groupDict,
-                                            self.data)
-        self._advanced.initialize()
-
-    def refresh(self):
-        self.username.set_text(self._user.name)
-        self.fullname.set_text(self._user.gecos)
-        self.admin.set_active(self._wheel.name in self._user.groups)
-
-        if self.usepassword.get_active():
-            self._checkPassword()
-
-        if self.username.get_text() and self.usepassword.get_active() and \
-           self._user.password == "":
-            self.pw.grab_focus()
-        elif self.fullname.get_text():
-            self.username.grab_focus()
-        else:
-            self.fullname.grab_focus()
-
-        self.b_advanced.set_sensitive(bool(self._user.name))
-
-    @property
-    def status(self):
-        if self._error:
-            return _("Error creating user account: %s") % self._error
-        elif len(self.data.user.userList) == 0:
-            return _("No user will be created")
-        elif self._wheel.name in self.data.user.userList[0].groups:
-            return _("Administrator %s will be created") % self.data.user.userList[0].name
-        else:
-            return _("User %s will be created") % self.data.user.userList[0].name
-
-    @property
-    def mandatory(self):
-        """ Only mandatory if the root pw hasn't been set in the UI
-            eg. not mandatory if the root account was locked in a kickstart
-        """
-        return not self.data.rootpw.password and not self.data.rootpw.lock
-
-    def apply(self):
-        # set the password only if the user enters anything to the text entry
-        # this should preserve the kickstart based password
-        if self.usepassword.get_active():
-            if self.pw.get_text():
-                self._user.password_kickstarted = False
-                self._user.password = cryptPassword(self.pw.get_text())
-                self._user.isCrypted = True
-                self.pw.set_placeholder_text("")
-                self.confirm.set_placeholder_text("")
-
-        # reset the password when the user unselects it
-        else:
-            self.pw.set_placeholder_text("")
-            self.confirm.set_placeholder_text("")
-            self._user.password = ""
-            self._user.isCrypted = False
-            self._user.password_kickstarted = False
-
-        self._user.name = self.username.get_text()
-        self._user.gecos = self.fullname.get_text()
-
-        # the user will be created only if the username is set
-        if self._user.name:
-            if self.admin.get_active() and \
-               self._wheel.name not in self._user.groups:
-                self._user.groups.append(self._wheel.name)
-            elif not self.admin.get_active() and \
-                 self._wheel.name in self._user.groups:
-                self._user.groups.remove(self._wheel.name)
-
-            self.data.group.groupList += (self._groupDict[g] for g in self._user.groups
-                                                             if g != self._wheel.name)
-
-            if self._user not in self.data.user.userList:
-                self.data.user.userList.append(self._user)
-
-        elif self._user in self.data.user.userList:
-            self.data.user.userList.remove(self._user)
-
-    @property
-    def sensitive(self):
-        return not (self.completed and flags.automatedInstall)
-
-    @property
-    def completed(self):
-        return len(self.data.user.userList) > 0
-
-    def _passwordDisabler(self, editable = None, data = None):
-        """Called by Gtk callback when the "Use password" check
-        button is toggled. It will make password entries in/sensitive."""
-
-        self.pw.set_sensitive(self.usepassword.get_active())
-        self.confirm.set_sensitive(self.usepassword.get_active())
-        if not self.usepassword.get_active():
-            self.clear_info()
-        else:
-            self._checkPassword()
-
-    def _guessNameDisabler(self, editable = None, data = None):
-        """Called by Gtk callback when the username or hostname
-        entry changes. It disables the guess algorithm if the
-        user added his own text there and reenable it when the
-        user deletes the whole text."""
-
-        if editable.get_text() == "":
-            self.guesser[editable] = True
-            self.b_advanced.set_sensitive(False)
-        else:
-            self.guesser[editable] = False
-            self.b_advanced.set_sensitive(True)
-
-    def _guessNames(self, editable = None, data = None):
-        """Called by Gtk callback when the full name field changes.
-        It guesses the username and hostname, strips diacritics
-        and make those lowercase.
-        """
-        fullname = self.fullname.get_text()
-        username = guess_username(fullname)
-
-        # after the text is updated in guesser, the guess has to be reenabled
-        if self.guesser[self.username]:
-            self.username.set_text(username)
-            self.guesser[self.username] = True
-
-    def _checkPassword(self, editable = None, data = None):
-        """This method updates the password indicators according
-        to the passwords entered by the user. It is called by
-        the changed Gtk event handler.
-        """
-
-        # If the password was set by kickstart, skip the strength check
-        if self._user.password_kickstarted:
-            return True
-
-        try:
-            strength = self._pwq.check(self.pw.get_text(), None, None)
-            _pwq_error = None
-        except pwquality.PWQError as e:
-            _pwq_error = e.args[1]
-            strength = 0
-
-        if strength < 50:
-            val = 1
-            text = _("Weak")
-            self._error = _("The password you have provided is weak")
-            if _pwq_error:
-                self._error += ": %s. " % _pwq_error
-            else:
-                self._error += ". "
-            self._error += _("You will have to press Done twice to confirm it.")
-        elif strength < 75:
-            val = 2
-            text = _("Fair")
-            self._error = False
-        elif strength < 90:
-            val = 3
-            text = _("Good")
-            self._error = False
-        else:
-            val = 4
-            text = _("Strong")
-            self._error = False
-
-        if not self.pw.get_text():
-            val = 0
-            text = _("Empty")
-            self._error = _("The password is empty.")
-        elif self.confirm.get_text() and self.pw.get_text() != self.confirm.get_text():
-            self._error = _("The passwords do not match.")
-
-        self.pw_bar.set_value(val)
-        self.pw_label.set_text(text)
-
-        self.clear_info()
-        if self._error:
-            self.set_warning(self._error)
-            self.window.show_all()
-            return False
-
-        return True
-
-    def _validatePassword(self):
-        """This method checks the password weakness and
-        implements the Press Done twice logic. It is used from
-        the on_back_clicked handler.
-
-        It also sets the self._error of the password is not
-        sufficient or does not pass the pwquality checks.
-
-        :return: True if the password should be accepted, False otherwise
-        :rtype: bool
-
-        """
-
-        # Do various steps to validate the password
-        # sets self._error to an error string
-        # Return True if valid, False otherwise
-        self._error = False
-        pw = self.pw.get_text()
-        confirm = self.confirm.get_text()
-
-        if not pw and not confirm:
-            self._error = _("You must provide and confirm a password.")
-            return False
-
-        try:
-            self._error = validatePassword(pw, confirm)
-        except PWQError as e:
-            if pw == self._oldweak:
-                # We got a second attempt with the same weak password
-                pass
-            else:
-                self._error = _("You have provided a weak password: %s. "
-                                " Press Done again to use anyway.") % e.args[1]
-                self._oldweak = pw
-                return False
-
-        if self._error:
-            return False
-
-        # the self._checkPassword function is used to indicate the password
-        # strength and need of hitting the Done button twice so use it here as
-        # well
-        if not self._checkPassword() and pw != self._oldweak:
-            # check failed and the Done button was clicked for the first time
-            self._oldweak = pw
-            return False
-
-        # if no errors, clear the info for next time we go into the spoke
-        self.clear_info()
-        self._error = False
-        return True
-
-    def on_advanced_clicked(self, _button):
-        """Handler for the Advanced.. button. It starts the Advanced dialog
-        for setting homedit, uid, gid and groups.
-        """
-
-        self._user.name = self.username.get_text()
-
-        if self.admin.get_active() and \
-           self._wheel.name not in self._user.groups:
-            self._user.groups.append(self._wheel.name)
-        elif not self.admin.get_active() and \
-             self._wheel.name in self._user.groups:
-            self._user.groups.remove(self._wheel.name)
-
-        self._advanced.refresh()
-        with enlightbox(self.window, self._advanced.window):
-            self._advanced.run()
-
-        self.admin.set_active(self._wheel.name in self._user.groups)
-
-    def on_back_clicked(self, button):
-        username = self.username.get_text()
-        # if an invalid username was given, that's the biggest issue
-        if username and not USERNAME_VALID.match(username):
-            self.clear_info()
-            self.set_warning(_("Invalid user name"))
-            self.username.grab_focus()
-            self.window.show_all()
-        # Return if:
-        # - no user is requested (empty user name)
-        # - no password is required
-        # - password is set by kickstart and password text entry is empty
-        # - password is set by dialog and _validatePassword returns True
-        elif not username or \
-           not self.usepassword.get_active() or \
-           (self.pw.get_text() == "" and \
-            self.pw.get_text() == self.confirm.get_text() and \
-            self._user.password_kickstarted) or \
-           self._validatePassword():
-            self._error = False
-            self.clear_info()
-            NormalSpoke.on_back_clicked(self, button)
-        # Show the confirmation message if the password is not acceptable
-        else:
-            self.clear_info()
-            self.set_warning(self._error)
-            self.pw.grab_focus()
-            self.window.show_all()
-
diff -ruN anaconda-19.31.123.orig/pyanaconda/ui/tui/spokes/user.py anaconda-19.31.123/pyanaconda/ui/tui/spokes/user.py
--- anaconda-19.31.123.orig/pyanaconda/ui/tui/spokes/user.py	2015-02-16 09:29:34.000000000 -0700
+++ anaconda-19.31.123/pyanaconda/ui/tui/spokes/user.py	1969-12-31 17:00:00.000000000 -0700
@@ -1,151 +0,0 @@
-# User creation text spoke
-#
-# Copyright (C) 2013-2014  Red Hat, Inc.
-#
-# This copyrighted material is made available to anyone wishing to use,
-# modify, copy, or redistribute it subject to the terms and conditions of
-# the GNU General Public License v.2, or (at your option) any later version.
-# This program is distributed in the hope that it will be useful, but WITHOUT
-# ANY WARRANTY expressed or implied, including the implied warranties of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
-# Public License for more details.  You should have received a copy of the
-# GNU General Public License along with this program; if not, write to the
-# Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
-# 02110-1301, USA.  Any Red Hat trademarks that are incorporated in the
-# source code or documentation are not subject to the GNU General Public
-# License and may only be used or replicated with the express permission of
-# Red Hat, Inc.
-#
-# Red Hat Author(s): Martin Sivak <msivak@redhat.com>
-#                    Chris Lumens <clumens@redhat.com>
-#
-
-from pyanaconda.ui.tui.spokes import EditTUISpoke
-from pyanaconda.ui.tui.spokes import EditTUISpokeEntry as Entry
-from pyanaconda.ui.common import FirstbootSpokeMixIn
-from pyanaconda.users import guess_username, USERNAME_VALID
-from pyanaconda.flags import flags
-from pyanaconda.i18n import N_, _
-from pykickstart.constants import FIRSTBOOT_RECONFIG
-from pyanaconda.constants import ANACONDA_ENVIRON, FIRSTBOOT_ENVIRON
-from pyanaconda.regexes import GECOS_VALID, USERNAME_VALID, GROUPLIST_SIMPLE_VALID
-
-__all__ = ["UserSpoke"]
-
-class UserSpoke(FirstbootSpokeMixIn, EditTUISpoke):
-    title = N_("Create user")
-    category = "password"
-
-    edit_fields = [
-        Entry("Create user", "_create", EditTUISpoke.CHECK, True),
-        Entry("Fullname", "gecos", GECOS_VALID, lambda self,args: args._create),
-        Entry("Username", "name", USERNAME_VALID, lambda self,args: args._create),
-        Entry("Use password", "_use_password", EditTUISpoke.CHECK, lambda self,args: args._create),
-        Entry("Password", "_password", EditTUISpoke.PASSWORD, lambda self,args: args._use_password and args._create),
-        Entry("Administrator", "_admin", EditTUISpoke.CHECK, lambda self,args: args._create),
-        Entry("Groups", "_groups", GROUPLIST_SIMPLE_VALID, lambda self,args: args._create)
-        ]
-
-    @classmethod
-    def should_run(cls, environment, data):
-        # the user spoke should run always in the anaconda and in firstboot only
-        # when doing reconfig or if no user has been created in the installation
-        if environment == ANACONDA_ENVIRON:
-            return True
-        elif environment == FIRSTBOOT_ENVIRON and data is None:
-            # cannot decide, stay in the game and let another call with data
-            # available (will come) decide
-            return True
-        elif environment == FIRSTBOOT_ENVIRON and data and \
-                (data.firstboot.firstboot == FIRSTBOOT_RECONFIG or \
-                     len(data.user.userList) == 0):
-            return True
-        else:
-            return False
-
-    def __init__(self, app, data, storage, payload, instclass):
-        FirstbootSpokeMixIn.__init__(self)
-        EditTUISpoke.__init__(self, app, data, storage, payload, instclass)
-
-        if self.data.user.userList:
-            self.args = self.data.user.userList[0]
-            self.args._create = True
-        else:
-            self.args = self.data.UserData()
-            self.args._create = False
-
-        self.args._use_password = self.args.isCrypted or self.args.password
-
-        # Keep the password separate from the kickstart data until apply()
-        # so that all of the properties are set at once
-        self.args._password = ""
-
-    def refresh(self, args = None):
-        self.args._admin = "wheel" in self.args.groups
-        self.args._groups = ", ".join(self.args.groups)
-        return EditTUISpoke.refresh(self, args)
-
-    @property
-    def completed(self):
-        """ Verify a user is created; verify pw is set if option checked. """
-        if len(self.data.user.userList) > 0:
-            if self.args._use_password and not bool(self.args.password or self.args.isCrypted):
-                return False
-            else:
-                return True
-        else:
-            return False
-
-    @property
-    def showable(self):
-        return not (self.completed and flags.automatedInstall)
-
-    @property
-    def mandatory(self):
-        """ Only mandatory if the root pw hasn't been set in the UI
-            eg. not mandatory if the root account was locked in a kickstart
-        """
-        return not self.data.rootpw.password and not self.data.rootpw.lock
-
-    @property
-    def status(self):
-        if len(self.data.user.userList) == 0:
-            return _("No user will be created")
-        elif self.args._use_password and not bool(self.args.password or self.args.isCrypted):
-            return _("You must set a password")
-        elif "wheel" in self.data.user.userList[0].groups:
-            return _("Administrator %s will be created") % self.data.user.userList[0].name
-        else:
-            return _("User %s will be created") % self.data.user.userList[0].name
-
-    def apply(self):
-        if self.args.gecos and not self.args.name:
-            username = guess_username(self.args.gecos)
-            if USERNAME_VALID.match(username):
-                self.args.name = guess_username(self.args.gecos)
-
-        self.args.groups = [g.strip() for g in self.args._groups.split(",") if g]
-
-        # Add or remove the user from wheel group
-        if self.args._admin and "wheel" not in self.args.groups:
-            self.args.groups.append("wheel")
-        elif not self.args._admin and "wheel" in self.args.groups:
-            self.args.groups.remove("wheel")
-
-        # Add or remove the user from userlist as needed
-        if self.args._create and (self.args not in self.data.user.userList):
-            self.data.user.userList.append(self.args)
-        elif (not self.args._create) and (self.args in self.data.user.userList):
-            self.data.user.userList.remove(self.args)
-
-        # encrypt and store password only if user entered anything; this should
-        # preserve passwords set via kickstart
-        if self.args._use_password and len(self.args._password) > 0:
-            self.args.password = self.args._password
-            self.args.isCrypted = True
-            self.args.password_kickstarted = False
-        # clear pw when user unselects to use pw
-        else:
-            self.args.password = ""
-            self.args.isCrypted = False
-            self.args.password_kickstarted = False
